<!DOCTYPE html>
<html lang="en">
<head>
<meta charset=utf-8>
<title>HTML5 Chat</title>
<body>
<section id="wrapper">
 
    <header>
      <h1>HTML5 Chat</h1>
    </header>
 
<style>
 
#chat { width: 97%; }
.message { font-weight: bold; }
.message:before { content: ' '; color: #bbb; font-size: 14px; }
#log {
  overflow: auto;
  max-height: 300px;
  list-style: none;
  padding: 0;
}
#log li {
  border-top: 1px solid #ccc;
  margin: 0;
  padding: 10px 0;
}
body { 
  font: normal 16px/20px "Helvetica Neue", Helvetica, sans-serif;
  background: rgb(237, 237, 236);
  margin: 0;
  margin-top: 40px;
  padding: 0;
}
 
section, header {
  display: block;
}
 
#wrapper {
  width: 600px;
  margin: 0 auto;
  background: #fff;
  border-radius: 10px;
  border-top: 1px solid #fff;
  padding-bottom: 16px;
}
 
h1 {
  padding-top: 10px;
}
 
h2 {
  font-size: 100%;
  font-style: italic;
}
 
header,
article > * {
  margin: 20px;
}
 
#status {
  padding: 5px;
  color: #fff;
  background: #ccc;
}
 
#status.fail {
  background: #c00;
}
 
#status.success {
  background: #0c0;
}
 
#status.offline {
  background: #c00;
}
 
#status.online {
  background: #0c0;
}
 
#html5badge {
  margin-left: -30px;
  border: 0;
}
 
#html5badge img {
  border: 0;
}

td {
  border: solid 2px black;
  width: 50px;
  height: 50px;
}
</style>
<article>
  <form onsubmit="addMessage(); return false;">
    <input type="text" id="chat" placeholder="type and press enter to chat" />
    <br />
    <select id="numOfCards">
    <option value="1">1</option>
    <option value="2">2</option>
    <option value="3">3</option>
    <option value="4">4</option>
    <option value="5">5</option>
    <option value="6">6</option>
    </select>
    <input type="button" id="" onclick="GetCards(document.getElementById('numOfCards').value)"/>
  </form>
  <p id="status">Not connected</p>
  <p>Users connected: <span id="connected">0</span></p>
  <p>To test, open two windows with Web Socket support, type a message above and press return.</p>
  <ul id="log"></ul>
</article>
<script>
 
    connected = document.getElementById("connected");
    log = document.getElementById("log");
    chat = document.getElementById("chat");
    form = chat.form;
    state = document.getElementById("status");
 
    if (window.WebSocket === undefined)
    {
        state.innerHTML = "sockets not supported";
        state.className = "fail";
    }
    else
    {
        if (typeof String.prototype.startsWith != "function")
        {
            String.prototype.startsWith = function (str)
            {
                return this.indexOf(str) == 0;
            };
        }
    
        window.addEventListener("load", onLoad, false);
    }
 
    function onLoad()
    {
        var wsUri = "ws://192.168.0.8:7761";  
  
        websocket = new WebSocket(wsUri);
        websocket.onopen = function(evt) { onOpen(evt) };
        websocket.onclose = function(evt) { onClose(evt) };
        websocket.onmessage = function(evt) { onMessage(evt) };
        websocket.onerror = function(evt) { onError(evt) };
    }
    
    function ResetCards() {
    	for (var i=1;i<7;i++) 
    	{
    		for(var j=1;j<4;j++)
    		{
    			for(var k=1;k<10;k++)
	    		{
	    			document.getElementById("c" + i + "r" + j + "s" + k).innerHTML = "";
	    		}
    		}
    	}
    }
    
    function GetCards(NumberOfCards)
    {
        var array0 = [1, 2, 3, 4, 5, 6, 7, 8, 9];
        var array10 = [10, 11, 12, 13, 14, 15, 16, 17, 18, 19];
        var array20 = [20, 21, 22, 23, 24, 25, 26, 27, 28, 29];
        var array30 = [30, 31, 32, 33, 34, 35, 36, 37, 38, 39];
        var array40 = [40, 41, 42, 43, 44, 45, 46, 47, 48, 49];
        var array50 = [50, 51, 52, 53, 54, 55, 56, 57, 58, 59];
        var array60 = [60, 61, 62, 63, 64, 65, 66, 67, 68, 69];
        var array70 = [70, 71, 72, 73, 74, 75, 76, 77, 78, 79];
        var array80 = [80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90];
        var arrayFull = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90];
     	var MyCards = []; //Array of cards (1-6)
     	var InitialNumbers = [];
     	  	
     	document.getElementById("numbers").innerHTML = "";
     	
     	ResetCards();
     	
     	//Populate minimum card requirement first
     	for (var i=0;i<NumberOfCards;i++)
     	{
     		var CardLine1 = [];
	     	var CardLine2 = [];
	     	var CardLine3 = [];
	     	
	     	//Get a numbers from each section (Total: 9)
	        InitialNumbers = [array0[Math.floor(Math.random() * array0.length - 1) + 1],array10[Math.floor(Math.random() * array10.length - 1) + 1],array20[Math.floor(Math.random() * array20.length - 1) + 1],array30[Math.floor(Math.random() * array30.length - 1) + 1],array40[Math.floor(Math.random() * array40.length - 1) + 1],array50[Math.floor(Math.random() * array50.length - 1) + 1],array60[Math.floor(Math.random() * array60.length - 1) + 1],array70[Math.floor(Math.random() * array70.length - 1) + 1],array80[Math.floor(Math.random() * array80.length - 1) + 1]];

	        CardLine1[0] = InitialNumbers[0];	//array0[Math.floor(Math.random() * array0.length - 1) + 1];
	        CardLine2[0] = InitialNumbers[1];	//array10[Math.floor(Math.random() * array10.length - 1) + 1];
	        CardLine3[0] = InitialNumbers[2];	//array20[Math.floor(Math.random() * array20.length - 1) + 1];
	        CardLine1[1] = InitialNumbers[3];	//array30[Math.floor(Math.random() * array30.length - 1) + 1];
	        CardLine2[1] = InitialNumbers[4];	//array40[Math.floor(Math.random() * array40.length - 1) + 1];
	        CardLine3[1] = InitialNumbers[5];	//array50[Math.floor(Math.random() * array50.length - 1) + 1];
	        CardLine1[2] = InitialNumbers[6];	//array60[Math.floor(Math.random() * array60.length - 1) + 1];
	        CardLine2[2] = InitialNumbers[7];	//array70[Math.floor(Math.random() * array70.length - 1) + 1];
	        CardLine3[2] = InitialNumbers[8];	//array80[Math.floor(Math.random() * array80.length - 1) + 1];

	        //Remove from each section
	        array0.splice(array0.indexOf(InitialNumbers[0]), 1);
	        array10.splice(array10.indexOf(InitialNumbers[1]), 1);
	        array20.splice(array20.indexOf(InitialNumbers[2]), 1);
	        array30.splice(array30.indexOf(InitialNumbers[3]), 1);
	        array40.splice(array40.indexOf(InitialNumbers[4]), 1);
	        array50.splice(array50.indexOf(InitialNumbers[5]), 1);
	        array60.splice(array60.indexOf(InitialNumbers[6]), 1);
	        array70.splice(array70.indexOf(InitialNumbers[7]), 1);
	        array80.splice(array80.indexOf(InitialNumbers[8]), 1);

	        //Remove from master list
	        arrayFull.splice(arrayFull.indexOf(InitialNumbers[0]), 1);
	        arrayFull.splice(arrayFull.indexOf(InitialNumbers[1]), 1);
	        arrayFull.splice(arrayFull.indexOf(InitialNumbers[2]), 1);
	        arrayFull.splice(arrayFull.indexOf(InitialNumbers[3]), 1);
	        arrayFull.splice(arrayFull.indexOf(InitialNumbers[4]), 1);
	        arrayFull.splice(arrayFull.indexOf(InitialNumbers[5]), 1);
	        arrayFull.splice(arrayFull.indexOf(InitialNumbers[6]), 1);
	        arrayFull.splice(arrayFull.indexOf(InitialNumbers[7]), 1);
	        arrayFull.splice(arrayFull.indexOf(InitialNumbers[8]), 1);
	        
	        MyCards[i] = [CardLine1, CardLine2, CardLine3];
		}
		
		//Populate cards first so that they all contain 1 number from each category
		for (var i=0;i<NumberOfCards;i++)
     	{
	        var count0 = 0;
     		var count10 = 0;
     		var count20 = 0;
     		var count30 = 0;
     		var count40 = 0;
     		var count50 = 0;
     		var count60 = 0;
     		var count70 = 0;
     		var count80 = 0;
     		var categoryNum = 0;
     		var cardGroupCount = 0;
     		var cardLineCount = 0;
     		
     		CardLine1 = MyCards[i][0];
     		CardLine2 = MyCards[i][1];
     		CardLine3 = MyCards[i][2];
     		
     		for (var j=9;j<15;j++)
     		{
     			//Get LineArray that needs numbers
     			var TempArray = [];
     			var CardLineID;
     			
     			if (CardLine1.length != 5)
     			{
     				CardLineID = 1;
     				TempArray = CardLine1;
     			}
     			
     			else if (CardLine2.length != 5)
     			{
     				CardLineID = 2;
     				TempArray = CardLine2;
     			}
     			
     			else
     			{
     				CardLineID = 3;
     				TempArray = CardLine3;
     			}
     			
     			var RandNum = arrayFull[Math.floor(Math.random() * arrayFull.length - 1) + 1];
     			categoryNum = Math.floor(RandNum / 10);
     			
     			if (categoryNum == 9)
     			{
     				categoryNum = 8;
     			}

     			switch(categoryNum)
     			{
     				case 0:
     					count0++;
     					cardGroupCount = count0;
     				break;
     				
     				case 1:
     					count10++;
     					cardGroupCount = count10;
     				break;
     				
     				case 2:
     					count20++;
     					cardGroupCount = count20;
     				break;
     				
     				case 3:
     					count30++;
     					cardGroupCount = count30;
     				break;
     				
     				case 4:
     					count40++;
     					cardGroupCount = count40;
     				break;
     				
     				case 5:
     					count50++;
     					cardGroupCount = count50;
     				break;
     				
     				case 6:
     					count60++;
     					cardGroupCount = count60;
     				break;
     				
     				case 7:
     					count70++;
     					cardGroupCount = count70;
     				break;
     				
     				case 8:
     					count80++;
     					cardGroupCount = count80;
     				break;
     			}
     			
     			//Insert numbers of current line array into array, then check if the category num is found in it. If so, then re-pick
     			var Line = [];
     			Line = GetLineCategory(TempArray);
     			
     			var FoundNumber;
     			
     			//Check number rules: no more than 3 per category per card, no more than 1 per category per line
     			if (cardGroupCount >= 3 || Line.indexOf(Math.floor(RandNum / 10)) > -1)
     			{
     				FoundNumber = false;
     				var TempArrayFull = arrayFull;
     				
     				//Go through remaining numbers i - PROBLEM HERE
     				for (var t=0;t<TempArrayFull.length;t++)
     				{
     					RandNum = TempArrayFull[Math.floor(Math.random() * TempArrayFull.length - 1) + 1];
     					categoryNum = Math.floor(RandNum / 10);
     					
     					if (categoryNum == 9)
		     			{
		     				categoryNum = 8;
		     			}

	     				switch(categoryNum)
		     			{
		     				case 0:
		     					count0++;
		     					cardGroupCount = count0;
		     					FoundNumber = CheckValidNumber(cardGroupCount, RandNum, Line);
		     					
		     					if (!FoundNumber)
		     					{
		     						count0--;
		     					}
		     				break;

		     				case 1:
		     					count10++;
		     					cardGroupCount = count10;
		     					FoundNumber = CheckValidNumber(cardGroupCount, RandNum, Line);
		     					
		     					if (!FoundNumber)
		     					{
		     						count10--;
		     					}
		     				break;

		     				case 2:
		     					count20++;
		     					cardGroupCount = count20;
		     					FoundNumber = CheckValidNumber(cardGroupCount, RandNum, Line);
		     					
		     					if (!FoundNumber)
		     					{
		     						count20--;
		     					}
		     				break;

		     				case 3:
		     					count30++;
		     					cardGroupCount = count30;
		     					FoundNumber = CheckValidNumber(cardGroupCount, RandNum, Line);
		     					
		     					if (!FoundNumber)
		     					{
		     						count30--;
		     					}
		     				break;

		     				case 4:
		     					count40++;
		     					cardGroupCount = count40;
		     					FoundNumber = CheckValidNumber(cardGroupCount, RandNum, Line);
		     					
		     					if (!FoundNumber)
		     					{
		     						count40--;
		     					}
		     				break;

		     				case 5:
		     					count50++;
		     					cardGroupCount = count50;
		     					FoundNumber = CheckValidNumber(cardGroupCount, RandNum, Line);
		     					
		     					if (!FoundNumber)
		     					{
		     						count50--;
		     					}
		     				break;

		     				case 6:
		     					count60++;
		     					cardGroupCount = count60;
		     					FoundNumber = CheckValidNumber(cardGroupCount, RandNum, Line);
		     					
		     					if (!FoundNumber)
		     					{
		     						count60--;
		     					}
		     				break;

		     				case 7:
		     					count70++;
		     					cardGroupCount = count70;
		     					FoundNumber = CheckValidNumber(cardGroupCount, RandNum, Line);
		     					
		     					if (!FoundNumber)
		     					{
		     						count70--;
		     					}
		     				break;

		     				case 8:
		     					count80++;
		     					cardGroupCount = count80;
		     					FoundNumber = CheckValidNumber(cardGroupCount, RandNum, Line);
		     					
		     					if (!FoundNumber)
		     					{
		     						count80--;
		     					}
		     				break;
		     			}

		     			if (FoundNumber)
		     			{
		     				break;
		     			}
     				}
     				
     				
     				if (!FoundNumber)
 					{
 						//For each card
 						for (var x=0;x<6;x++)
 						{
 							var TempCard = MyCards[x];
 							
 							//For each line
 							for (var y=0;y<3;y++)
 							{
 								var CurrLine = GetLineCategory(MyCards[i][(CardLineID - 1)]);
 								var PrevLine = GetLineCategory(MyCards[x][y]);
 								
 								//var TempLine = MyCards[x][y];
 								
 								//For each number
 								for (var z=3;z<5;z++)
 								{
 									var TempNum = MyCards[x][y][z];
 									var PrevCategoryCount = GetCategoryNumber(TempCard, Math.floor(TempNum / 10)); //Get Total number of numbers in that category already in that card
 									var CurrCategoryCount = GetCategoryNumber(MyCards[i], Math.floor(RandNum / 10));
 									
 									//If replace line doesn't have another number in that category and more than 3 for the card, AND current line doesn't have replace 
 									//number in that category, swap numbers
 									if (PrevLine.indexOf(Math.floor(RandNum / 10)) == -1 && PrevCategoryCount < 3 && CurrLine.indexOf(Math.floor(TempNum / 10)) == -1 && CurrCategoryCount < 3)
 									{
 										//Replace number with current number
 										MyCards[x][y][z] = RandNum;
 										
 										//Set RandNum to replaced number to add to current line/card
 										RandNum = TempNum;
 										
 										FoundNumber = true;
 										break;
 									}
 								}
 								
 								if (FoundNumber)
 								{
 									y = 4;
 								}
 							}
 							
 							if (FoundNumber)
							{
								x = 7;
							}
 						}
 						
     				}
     			}
     			
     			//Add to temp Array
     			TempArray.push(RandNum);
     			
     			arrayFull.splice(arrayFull.indexOf(RandNum), 1);
     			
     			//document.getElementById("numbers").innerHTML += "RandNum: " + RandNum + "<br /> Category: " + Math.floor(RandNum / 10) + "<br />";
     		}
     		
     		//Set line # to temp array
     		switch (CardLineID)
 			{
 				case 1:
 					CardLine1 = TempArray;
 				break;
 				
 				case 2:
 					CardLine2 = TempArray;
 				break;
 				
 				case 3:
 					CardLine3 = TempArray;
 				break;
 			}
 			//Set lines to card
 			MyCards[i] = [CardLine1, CardLine2, CardLine3];
			document.getElementById("numbers").innerHTML += MyCards[i][0] + "<br />" + MyCards[i][1] + "<br />" + MyCards[i][2] + "<br /><br />";
			
 			//document.getElementById("numbers").innerHTML += arrayFull + " (" + arrayFull.length + ")<br />" + CardLine1 + "<br />" + CardLine2 + "<br />" + CardLine3 + "<br /><br />";
			
				
	        //Show card
     		//document.getElementById("card" + (i + 1)).style.display = 'block';
     		//document.getElementById("card" + (i + 1)).style.visibility = 'visible';
	    }
	    
	    //Add numbers to 
    	for (var x=0;x<NumberOfCards;x++)
		{
			var TempCard = MyCards[x];
			
			//For each line
			for (var y=0;y<3;y++)
			{	
				//var TempLine = MyCards[x][y];
				
				//For each number
				for (var z=0;z<5;z++)
				{
					//Add to card table
		        	var squareID = (Math.floor(MyCards[x][y][z] / 10)) + 1;
		 			if (squareID == 10)
		 			{
		 				squareID = 9;
		 			}
		 			
			     	document.getElementById("c" + (x + 1) + "r" + (y + 1) + "s" + squareID).innerHTML =  MyCards[x][y][z];
				}
			}
			
			 //Show card
     		document.getElementById("card" + (x + 1)).style.display = 'block';
     		document.getElementById("card" + (x + 1)).style.visibility = 'visible';
		}
    }
    
    function CheckValidNumber(cardGroupCount, RandNum, Line)
    {
		if (cardGroupCount <= 3 && Line.indexOf(Math.floor(RandNum / 10)) == -1)
		{
			return true;
		}
		
		else 
		{
			return false;
		}
    }
  	
  	function GetLineCategory(TempArray)
  	{
  		var Line = [];
  		
		for (var a=0; a<TempArray.length; a++)
		{
			var TACat = Math.floor(TempArray[a] / 10);
			Line.push(TACat);
		}
		
		return Line;
  	}
  	
  	function GetCategoryNumber(CardArray, categoryNum)
  	{
  		var Count = 0;
  		//Line
  		for (var a=0; a<3; a++)
		{
			for (var b=0; b<5;b++)
			{
				var Category = Math.floor(CardArray[a][b] / 10);
				
				if (Category == categoryNum)
				{
					Count++;
				}
			}
		}
		
		return Count;
  	}
  	
  	function checkCard()
  	{
  		
  	}
  	
    function onOpen(evt)
    {
        state.className = "success";
        state.innerHTML = "Connected to server";  
    }
  
    function onClose(evt)
    {
        state.className = "fail";
        state.innerHTML = "Not connected";
        connected.innerHTML = "0";        
    }
  
    function onMessage(evt)
    {
        // There are two types of messages: 
        //     1. a chat participant message itself
        //     2. a message with a number of connected chat participants
  
        var message = evt.data;
  
        if (message.startsWith("log:"))
        {
            message = message.slice("log:".length);
            log.innerHTML = '<li class="message">' + message + "</li>" + log.innerHTML;  
        }
        else if (message.startsWith("connected:"))
        {
            message = message.slice("connected:".length);
            connected.innerHTML = message;  
        }    
    }
 
    function onError(evt)
    { 
        state.className = "fail";
        state.innerHTML = "Communication error";
    }
  
    function addMessage()
    {
        var message = chat.value;
      
        chat.value = "";
    
        websocket.send(message);
    }  
 
</script>

<br />

<div id="numbers"></div><br />
<div id="card1" style="display:none; visibility:hidden;">
<table style="width:100%; text-align:center; border-spacing: 0px; font-size:32px;">
	<tr>
		<td id="c1r1s1"></td>
		<td id="c1r1s2"></td>
		<td id="c1r1s3"></td>
		<td id="c1r1s4"></td>
		<td id="c1r1s5"></td>
		<td id="c1r1s6"></td>
		<td id="c1r1s7"></td>
		<td id="c1r1s8"></td>
		<td id="c1r1s9"></td>
	</tr>
	<tr>
		<td id="c1r2s1"></td>
		<td id="c1r2s2"></td>
		<td id="c1r2s3"></td>
		<td id="c1r2s4"></td>
		<td id="c1r2s5"></td>
		<td id="c1r2s6"></td>
		<td id="c1r2s7"></td>
		<td id="c1r2s8"></td>
		<td id="c1r2s9"></td>
	</tr>
	<tr>
		<td id="c1r3s1"></td>
		<td id="c1r3s2"></td>
		<td id="c1r3s3"></td>
		<td id="c1r3s4"></td>
		<td id="c1r3s5"></td>
		<td id="c1r3s6"></td>
		<td id="c1r3s7"></td>
		<td id="c1r3s8"></td>
		<td id="c1r3s9"></td>
	</tr>
</table>
</div><br />
<div id="card2" style="display:none; visibility:hidden;">
<table style="width:100%; text-align:center; border-spacing: 0px; font-size:32px;">
	<tr>
		<td id="c2r1s1"></td>
		<td id="c2r1s2"></td>
		<td id="c2r1s3"></td>
		<td id="c2r1s4"></td>
		<td id="c2r1s5"></td>
		<td id="c2r1s6"></td>
		<td id="c2r1s7"></td>
		<td id="c2r1s8"></td>
		<td id="c2r1s9"></td>
	</tr>
	<tr>
		<td id="c2r2s1"></td>
		<td id="c2r2s2"></td>
		<td id="c2r2s3"></td>
		<td id="c2r2s4"></td>
		<td id="c2r2s5"></td>
		<td id="c2r2s6"></td>
		<td id="c2r2s7"></td>
		<td id="c2r2s8"></td>
		<td id="c2r2s9"></td>
	</tr>
	<tr>
		<td id="c2r3s1"></td>
		<td id="c2r3s2"></td>
		<td id="c2r3s3"></td>
		<td id="c2r3s4"></td>
		<td id="c2r3s5"></td>
		<td id="c2r3s6"></td>
		<td id="c2r3s7"></td>
		<td id="c2r3s8"></td>
		<td id="c2r3s9"></td>
	</tr>
</table>
</div>
<br />
<div id="card3" style="display:none; visibility:hidden;">
<table style="width:100%; text-align:center; border-spacing: 0px; font-size:32px;">
	<tr>
		<td id="c3r1s1"></td>
		<td id="c3r1s2"></td>
		<td id="c3r1s3"></td>
		<td id="c3r1s4"></td>
		<td id="c3r1s5"></td>
		<td id="c3r1s6"></td>
		<td id="c3r1s7"></td>
		<td id="c3r1s8"></td>
		<td id="c3r1s9"></td>
	</tr>
	<tr>
		<td id="c3r2s1"></td>
		<td id="c3r2s2"></td>
		<td id="c3r2s3"></td>
		<td id="c3r2s4"></td>
		<td id="c3r2s5"></td>
		<td id="c3r2s6"></td>
		<td id="c3r2s7"></td>
		<td id="c3r2s8"></td>
		<td id="c3r2s9"></td>
	</tr>
	<tr>
		<td id="c3r3s1"></td>
		<td id="c3r3s2"></td>
		<td id="c3r3s3"></td>
		<td id="c3r3s4"></td>
		<td id="c3r3s5"></td>
		<td id="c3r3s6"></td>
		<td id="c3r3s7"></td>
		<td id="c3r3s8"></td>
		<td id="c3r3s9"></td>
	</tr>
</table>
</div>
<br />
<div id="card4" style="display:none; visibility:hidden;">
<table style="width:100%; text-align:center; border-spacing: 0px; font-size:32px;">
	<tr>
		<td id="c4r1s1"></td>
		<td id="c4r1s2"></td>
		<td id="c4r1s3"></td>
		<td id="c4r1s4"></td>
		<td id="c4r1s5"></td>
		<td id="c4r1s6"></td>
		<td id="c4r1s7"></td>
		<td id="c4r1s8"></td>
		<td id="c4r1s9"></td>
	</tr>
	<tr>
		<td id="c4r2s1"></td>
		<td id="c4r2s2"></td>
		<td id="c4r2s3"></td>
		<td id="c4r2s4"></td>
		<td id="c4r2s5"></td>
		<td id="c4r2s6"></td>
		<td id="c4r2s7"></td>
		<td id="c4r2s8"></td>
		<td id="c4r2s9"></td>
	</tr>
	<tr>
		<td id="c4r3s1"></td>
		<td id="c4r3s2"></td>
		<td id="c4r3s3"></td>
		<td id="c4r3s4"></td>
		<td id="c4r3s5"></td>
		<td id="c4r3s6"></td>
		<td id="c4r3s7"></td>
		<td id="c4r3s8"></td>
		<td id="c4r3s9"></td>
	</tr>
</table>
</div>
<br />
<div id="card5" style="display:none; visibility:hidden;">
<table style="width:100%; text-align:center; border-spacing: 0px; font-size:32px;">
	<tr>
		<td id="c5r1s1"></td>
		<td id="c5r1s2"></td>
		<td id="c5r1s3"></td>
		<td id="c5r1s4"></td>
		<td id="c5r1s5"></td>
		<td id="c5r1s6"></td>
		<td id="c5r1s7"></td>
		<td id="c5r1s8"></td>
		<td id="c5r1s9"></td>
	</tr>
	<tr>
		<td id="c5r2s1"></td>
		<td id="c5r2s2"></td>
		<td id="c5r2s3"></td>
		<td id="c5r2s4"></td>
		<td id="c5r2s5"></td>
		<td id="c5r2s6"></td>
		<td id="c5r2s7"></td>
		<td id="c5r2s8"></td>
		<td id="c5r2s9"></td>
	</tr>
	<tr>
		<td id="c5r3s1"></td>
		<td id="c5r3s2"></td>
		<td id="c5r3s3"></td>
		<td id="c5r3s4"></td>
		<td id="c5r3s5"></td>
		<td id="c5r3s6"></td>
		<td id="c5r3s7"></td>
		<td id="c5r3s8"></td>
		<td id="c5r3s9"></td>
	</tr>
</table>
</div>
<br />
<div id="card6" style="display:none; visibility:hidden;">
<table style="width:100%; text-align:center; border-spacing: 0px; font-size:32px;">
	<tr>
		<td id="c6r1s1"></td>
		<td id="c6r1s2"></td>
		<td id="c6r1s3"></td>
		<td id="c6r1s4"></td>
		<td id="c6r1s5"></td>
		<td id="c6r1s6"></td>
		<td id="c6r1s7"></td>
		<td id="c6r1s8"></td>
		<td id="c6r1s9"></td>
	</tr>
	<tr>
		<td id="c6r2s1"></td>
		<td id="c6r2s2"></td>
		<td id="c6r2s3"></td>
		<td id="c6r2s4"></td>
		<td id="c6r2s5"></td>
		<td id="c6r2s6"></td>
		<td id="c6r2s7"></td>
		<td id="c6r2s8"></td>
		<td id="c6r2s9"></td>
	</tr>
	<tr>
		<td id="c6r3s1"></td>
		<td id="c6r3s2"></td>
		<td id="c6r3s3"></td>
		<td id="c6r3s4"></td>
		<td id="c6r3s5"></td>
		<td id="c6r3s6"></td>
		<td id="c6r3s7"></td>
		<td id="c6r3s8"></td>
		<td id="c6r3s9"></td>
	</tr>
</table>
</div>
<br />

<!--<div id="numbers0"></div><br />
<div id="numbers10"></div><br />
<div id="numbers20"></div><br />
<div id="numbers30"></div><br />
<div id="numbers40"></div><br />
<div id="numbers50"></div><br />
<div id="numbers60"></div><br />
<div id="numbers70"></div><br />
<div id="numbers80"></div><br />
<div id="numbersM"></div><br />-->
</section>
</body>
</html>